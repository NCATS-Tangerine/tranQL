.Legend {
  width: 100%;
  background-color:rgb(230,230,230);
}

/* Default = flexbox, but this prevents the ButtonGroup from being multiple lines, which is the default behavior. */
.btn-group {
  display:block;
}

.TypeButton {
  border-color:rgb(40,40,40);
  margin:7.5px;
  color:black;
  /* Make buttons smaller */
  padding:3px;
}

.TypeButton:hover {
  border-color:rgb(100,100,100);
}

.TypeButton.focus, .TypeButton:focus {
  box-shadow:none;
}

/* Setting --highlight-color in the inline style property, which can later be accessed and used when focused */
.TypeButton.active {
  box-shadow: 0 0 0 0.12rem var(--highlight-color) !important;
  border-color:var(--highlight-color) !important;
  color:black !important;
}

/* Since the default behavior of a ButtonGroup is one line, the buttons contained must be stripped of the style that ends up looking strange on multiple lines */
.TypeButton:first-child {
  margin-left:0;
  border-radius:0;
}
.TypeButton:last-child {
  margin-right:0;
  border-radius:0;
}

/* Change the 'border-like' color of an active TypeButton */
/* .TypeButton:not(:disabled):not(.disabled).active,
.TypeButton:not(:disabled):not(.disabled):active,
.show>.TypeButton.dropdown-toggle{
  color: black !important;
  background-color: black !important;
  border-color: black !important;
} */


.graph-element-type-container {
  padding:5px 5px 5px 7.5px;
}

.graph-element-header {
  margin-bottom:0px;
}

.graph-element-content {

}

/* Rules to adjust for if containers are empty */
.graph-element-type-container:not(:empty) {
  /* border-bottom:1px solid rgb(200,200,200); */
}
